{"version":3,"sources":["styles/profile.module.css","firebase.ts","redux/hooks.ts","components/Comment.tsx","components/CommentList.tsx","components/Post.tsx","components/PostList.tsx","components/Signin.tsx","components/Drawer.tsx","components/FormPost.tsx","components/ProfileEdit.tsx","components/profile.tsx","redux/post.ts","App.tsx","redux/store.ts","reportWebVitals.ts","index.tsx"],"names":["module","exports","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","firestore","getDatabase","getFirestore","storage","getStorage","useAppSelector","useSelector","Comment","comment","post","data","user","useState","loading","setLoading","likeOrDelete","likes","find","d","currentUser","uid","style","marginBottom","ListItem","alignItems","ListItemAvatar","Avatar","alt","src","author_avatar","ListItemText","primary","author_nickname","secondary","display","justifyContent","width","wordWrap","Typography","sx","component","variant","color","moment","created","fromNow","message","CardActions","disableSpacing","IconButton","onClick","a","undefined","id","setDoc","doc","arrayRemove","merge","arrayUnion","aria-label","length","author_id","totalMessages","increment","deleteDoc","then","CircularProgress","Delete","Divider","marginTop","position","top","left","transform","bgcolor","boxShadow","p","CommentList","open","setOpen","comments","setComments","setMessage","useEffect","q","query","collection","limit","onSnapshot","list","forEach","console","log","text","push","flexWrap","overflow","Modal","onClose","aria-labelledby","aria-describedby","Paper","TextField","InputProps","startAdornment","InputAdornment","avatar","height","nickname","charAt","value","onChange","e","currentTarget","fullWidth","marginLeft","label","name","mesRef","postRef","Date","toISOString","updateDoc","Tooltip","title","List","maxWidth","map","Post","Feed","Event","Label","grey","Content","Summary","User","Extra","image_url","images","Meta","user_id","PostList","index","currentId","posts","Signin","email","setEmail","pass","setPass","email2","setEmail2","pass2","setPass2","setNickname","age","setAge","navigate","useNavigate","className","background","paddingBottom","Card","Header","Form","Group","widths","Input","target","fluid","placeholder","extra","Button","basic","createUserWithEmailAndPassword","catch","err","code","signInWithEmailAndPassword","DrawerPanel","visible","setVisible","Drawer","flexShrink","boxSizing","Toolbar","Box","to","button","signOut","signOutHandler","ListItemIcon","Home","DrawerPanelMessages","setText","posts2","setPosts2","where","orderBy","anchor","endAdornment","Clear","fontSize","fontWeight","styled","FormPost","setOpenCreatePost","image","setImage","formRef","useRef","userData","Object","uploadImage","storageRef","ref","uploadTask","uploadBytes","contentType","getDownloadURL","url","createPost","current","values","image_name","padding","URL","createObjectURL","initialValues","onSubmit","innerRef","maxRows","multiline","as","htmlFor","files","accept","multiple","type","ProfileEdit","edit","setEdit","FormControl","m","userRef","TabPanel","props","children","other","role","hidden","Profile","setValue","anchorEl","openCreatePost","Boolean","userPosts","setUserPosts","styles","profile","first","second","Tabs","indicatorColor","textColor","event","newValue","Tab","icon","createSlice","initialState","colors","reducers","postData","state","action","payload","actions","Search","theme","borderRadius","shape","backgroundColor","alpha","palette","common","white","marginRight","spacing","breakpoints","up","SearchIconWrapper","pointerEvents","StyledInputBase","InputBase","paddingLeft","transition","transitions","create","App","setPosts","dispatch","useDispatch","userDoc","getDoc","userSnap","exists","fetchUser","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMobileMenuOpen","handleMobileMenuClose","mobileMenuId","renderMobileMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","size","Badge","badgeContent","aria-controls","aria-haspopup","flexGrow","AppBar","zIndex","drawer","edge","mr","noWrap","xs","sm","inputProps","md","path","element","textAlign","tableLayout","store","configureStore","reducer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4a4db641.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__2g4Gc\"};","import { initializeApp } from 'firebase/app'\nimport { getDatabase } from 'firebase/database'\nimport { getAuth, createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { getFirestore } from 'firebase/firestore'\nimport {getStorage} from 'firebase/storage'\n// Your web app's Firebase configuration\n/* const firebaseConfig = {\n    apiKey: \"AIzaSyAHGFiDFkpHNI-8ysTIKGohN0yCmxQPRk4\",\n    authDomain: \"todo-7ac24.firebaseapp.com\",\n    projectId: \"todo-7ac24\",\n    storageBucket: \"todo-7ac24.appspot.com\",\n    messagingSenderId: \"998281377900\",\n    appId: \"1:998281377900:web:07ed4643d2435a50180049\"\n  }; */\n// Initialize Firebase\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBHvp0BBGhc2vYgJx52cgs2MsUHNYjxRvM\",\n  authDomain: \"test-10282.firebaseapp.com\",\n  databaseURL: \"https://test-10282-default-rtdb.asia-southeast1.firebasedatabase.app\",\n  projectId: \"test-10282\",\n  storageBucket: \"test-10282.appspot.com\",\n  messagingSenderId: \"382090774299\",\n  appId: \"1:382090774299:web:d297d0a0780ec20ede35be\"\n};\n\nconst app = initializeApp(firebaseConfig)\n\nexport const auth = getAuth(app)\nexport const db = getDatabase(app)\nexport const firestore = getFirestore(app)\nexport const storage = getStorage(app)\n\n// Your web app's Firebase configuration\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from './store'\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\n\n","import { CircularProgress, Modal, Paper, Snackbar, SnackbarContent, } from '@mui/material'\nimport React, { useState, useEffect, FC } from 'react'\nimport { TPost, TComment } from '../types/types'\nimport { auth, firestore } from '../firebase';\nimport { setDoc, doc, arrayRemove, arrayUnion, deleteDoc, increment,  } from 'firebase/firestore'\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardContent from '@mui/material/CardContent';\nimport CardActions from '@mui/material/CardActions';\nimport Avatar from '@mui/material/Avatar';\nimport IconButton, { IconButtonProps } from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport { red, blueGrey } from '@mui/material/colors';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport ShareIcon from '@mui/icons-material/Share';\nimport moment from 'moment';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport Divider from '@mui/material/Divider';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport { Delete } from '@mui/icons-material';\nimport { useAppSelector } from '../redux/hooks';\nimport styles from '../styles/comments.module.css'\n\n\nconst style = {\n    position: 'absolute' as 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4,\n};\n\ninterface iComment {\n    comment: TComment,\n    post: TPost\n}\n\nexport const Comment: FC<iComment> = ({ comment, post }) => {\n    const user = useAppSelector(data => data.post.user)\n    const [loading, setLoading] = useState(false)\n\n    const likeOrDelete = comment?.likes?.find((d: any) => d == auth.currentUser?.uid)\n\n    return <div style={{marginBottom: -10,}} key={comment.id}>\n\n        <ListItem alignItems=\"flex-start\" style={{}}>\n            <ListItemAvatar>\n                <Avatar alt=\"Remy Sharp\" src={comment.author_avatar} />\n            </ListItemAvatar>\n            <ListItemText\n                primary={comment.author_nickname}\n                secondary={\n                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                        <div style={{ width: 160, wordWrap: 'break-word', }}>\n                            <Typography\n                                sx={{ display: 'block', }}\n                                component=\"span\"\n                                variant=\"body2\"\n                                color=\"text.primary\"\n                            >\n                                {moment(comment.created).fromNow()}\n                            </Typography>\n                            {comment.message}\n\n                        </div>\n\n                        <div style={{ width: 80, justifyContent: 'end', display: 'flex', }}>\n                            <CardActions disableSpacing>\n                                <IconButton\n                                    onClick={async () => {\n                                        if (comment.id !== undefined && auth.currentUser?.uid !== undefined) {\n\n                                            if (likeOrDelete) {\n                                                await setDoc(doc(firestore, `posts/${post.id}/comments`, comment.id), {\n                                                    likes: arrayRemove(auth.currentUser.uid)\n                                                }, { merge: true })\n                                            } else {\n                                                await setDoc(doc(firestore, `posts/${post.id}/comments`, comment.id), {\n                                                    likes: arrayUnion(auth.currentUser.uid)\n                                                }, { merge: true })\n                                            }\n                                        }\n                                    }}\n                                    aria-label=\"add to favorites\">\n                                    <FavoriteIcon style={{ color: likeOrDelete ? 'red' : 'inherit' }} />\n                                </IconButton>\n\n                                {comment?.likes?.length}\n                                {\n                                    auth.currentUser?.uid == comment.author_id ?\n                                        <IconButton\n                                            onClick={async () => {\n                                                if (comment.id !== undefined && auth.currentUser?.uid !== undefined) {\n                                                    setLoading(true)\n                                                    await setDoc(doc(firestore, `posts`, post.id), {\n                                                        totalMessages: increment(-1)\n                                                    }, {merge: true})\n                                                    await deleteDoc(doc(firestore, `posts/${post.id}/comments`, comment.id)).then(()=>setLoading(false))\n                                                }\n                                            }}\n                                            aria-label=\"add to favorites\">\n                                                {loading == true ? <CircularProgress/> :  <Delete />}\n                                           \n                                        </IconButton> : null\n                                }\n\n                            </CardActions>\n                    </div>\n                    </div>\n                }\n            />\n        </ListItem>\n        <Divider variant=\"inset\" component=\"li\" style={{marginTop: -20}}/>\n    </div >\n}","import { Avatar, IconButton, Modal, Paper, Stack, TextField, Tooltip, List, InputAdornment } from '@mui/material'\nimport React, { useState, useEffect, FC } from 'react'\nimport Post from './Post'\n\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { TPost } from '../types/types'\nimport { collection, doc, getDoc, increment, limit, onSnapshot, orderBy, query, setDoc, updateDoc } from '@firebase/firestore';\nimport { auth, firestore } from '../firebase';\nimport { setSyntheticLeadingComments } from 'typescript';\nimport { Comment } from './Comment'\nimport { useSelector } from 'react-redux';\nimport { useAppSelector } from '../redux/hooks';\nimport CheckIcon from '@mui/icons-material/Check';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { AccountCircle } from '@mui/icons-material';\n\nconst style = {\n    position: 'absolute' as 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    boxShadow: 24,\n    p: 4,\n};\n\n/* type TPost = {\n    avatar?: string,\n    text?: string,\n    likes: Array<string>,\n    created: string,\n    author_nickname: string,\n    image_name?: string,\n    image_url?: string,\n    user_id: string,\n} */\n\ninterface iCommentList {\n    open: boolean,\n    setOpen: (open: boolean) => void,\n    id: string,\n    post: TPost,\n}\n\nexport const CommentList: FC<iCommentList> = ({ open, setOpen, id, post }) => {\n\n    const handleOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n    const [comments, setComments] = useState([])\n    const [message, setMessage] = useState('')\n    const user = useAppSelector((data) => data.post.user)\n\n\n    useEffect(() => {\n        const q = query(collection(firestore, `posts/${post.id}/comments`), /* orderBy('createdAt', 'desc'), */ limit(10))\n\n        onSnapshot(q, (data) => {\n            const list: any = []\n            data.forEach((doc) => {\n                console.log(doc.data().text, 'doc')\n                list.push({ ...doc.data(), id: doc.id, post: post })\n\n            })\n            setComments(list)\n            console.log(list, 'list')\n            /* setPosts(list) */\n        })\n    }, [])\nconsole.log(post.totalMessages, 'posttotal')\n\n    return <div style={{ marginTop: 30, display: 'flex', flexWrap: 'wrap', justifyContent: 'space-evenly', overflow: 'auto', alignItems: 'start' }}>\n\n        <Modal\n            open={open}\n\n            onClose={handleClose}\n            aria-labelledby=\"modal-modal-title\"\n            aria-describedby=\"modal-modal-description\"\n        >\n            <Paper sx={style}>\n                <Post post={post} />\n                <div style={{ display: 'flex', justifyContent: 'space-evenly', marginBottom: 20, }}>\n\n                    <TextField\n                        InputProps={{\n                            startAdornment: (\n                                <InputAdornment position='start'>\n                                    <Avatar src={user?.avatar} sx={{ width: 25, height: 25, }}>\n                                        {user?.nickname?.charAt(0)}\n                                    </Avatar>\n                                </InputAdornment>\n                            )\n                        }}\n                        value={message}\n                        onChange={(e) => setMessage(e.currentTarget.value)}\n                        fullWidth={true} style={{ marginLeft: 10 }}\n                        label='create message'\n                        variant='standard'\n                        name='create' />\n                    <IconButton onClick={async () => {\n                        const mesRef = doc(collection(firestore, `posts/${post.id}/comments`))\n                        const postRef = doc(firestore, `posts`, post.id)\n                        await setDoc(mesRef, {\n                            author_avatar: user?.avatar,\n                            author_id: auth.currentUser?.uid,\n                            author_nickname: user.nickname,\n                            message: message,\n                            created: new Date().toISOString(),\n\n                        })\n                        await updateDoc(postRef, {\n                            totalMessages: increment(1)\n                        }).then(() => setMessage(''))\n                    }}>\n                        {\n                            message !== '' ? <Tooltip title='save'><CheckIcon /></Tooltip> : <Tooltip title='create'><EditIcon /></Tooltip>\n                        }\n                    </IconButton>\n                </div>\n                <List sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper', marginTop: -2}}>\n                  \n                    {\n                        comments.map((comment) => (\n                            <Comment comment={comment} post={post} />\n                        ))\n                    }\n                </List>\n            </Paper>\n        </Modal>\n        {/*   {posts?.map((post: any) => (\n      <Post post={post} />\n    ))} */}\n\n\n    </div>\n}","import React, { FC, useState } from \"react\";\nimport { styled } from \"@mui/material/styles\";\nimport Card from \"@mui/material/Card\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardActions from \"@mui/material/CardActions\";\nimport Collapse from \"@mui/material/Collapse\";\nimport Avatar from \"@mui/material/Avatar\";\nimport IconButton, { IconButtonProps } from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport { blue, grey, red } from \"@mui/material/colors\";\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\nimport moment from \"moment\";\nimport DeleteOutlineIcon from \"@mui/icons-material/DeleteOutline\";\nimport { Delete } from \"@material-ui/icons\";\nimport {\n  arrayUnion,\n  deleteDoc,\n  doc,\n  setDoc,\n  updateDoc,\n  arrayRemove,\n} from \"@firebase/firestore\";\nimport { auth, firestore } from \"../firebase\";\nimport {\n  CircularProgress,\n  Divider,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  ListSubheader,\n} from \"@mui/material\";\nimport CommentIcon from \"@mui/icons-material/Comment\";\nimport { CommentList } from \"./CommentList\";\nimport { TPost } from \".././types/types\";\nimport { useAppSelector } from \"../redux/hooks\";\nimport { Feed, Icon } from \"semantic-ui-react\";\ninterface ExpandMoreProps extends IconButtonProps {\n  expand: boolean;\n}\ninterface iPost {\n  post: TPost;\n}\n\nconst Post: FC<iPost> = ({ post }) => {\n  const [expanded, setExpanded] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [open, setOpen] = useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  const user = useAppSelector((data) => data.post.user);\n\n  const likeOrDelete = post?.likes?.find(\n    (d: any) => d == auth.currentUser?.uid\n  );\n\n  return (\n    <>\n      {/*        <ListItem style={{ width: '100%' }} alignItems='flex-start' key={post?.id}> */}\n      <Feed.Event>\n        <Feed.Label>\n          <Avatar\n            sx={{ bgcolor: grey[300] }}\n            src={post?.avatar}\n            aria-label=\"recipe\"\n          >\n            {post?.author_nickname?.charAt(0)}\n          </Avatar>\n        </Feed.Label>\n        <Feed.Content>\n          <Feed.Summary>\n            <Feed.User>{post.author_nickname}</Feed.User>\n            <Feed.Date>{moment(post?.created).fromNow()}</Feed.Date>\n          </Feed.Summary>\n          <Feed.Extra text>{post.text}</Feed.Extra>\n          {post.image_url ? (\n            <Feed.Extra images>\n              <a>\n                <img src={post.image_url} />\n              </a>\n            </Feed.Extra>\n          ) : null}\n          <Feed.Meta>\n            <IconButton\n              onClick={async () => {\n                if (\n                  post.id !== undefined &&\n                  auth.currentUser?.uid !== undefined\n                ) {\n                  if (likeOrDelete) {\n                    await setDoc(\n                      doc(firestore, `posts`, post.id),\n                      {\n                        likes: arrayRemove(auth.currentUser.uid),\n                      },\n                      { merge: true }\n                    );\n                  } else {\n                    await setDoc(\n                      doc(firestore, `posts`, post.id),\n                      {\n                        likes: arrayUnion(auth.currentUser.uid),\n                      },\n                      { merge: true }\n                    );\n                  }\n                }\n              }}\n              aria-label=\"add to favorites\"\n            >\n              <FavoriteIcon\n                style={{ color: !likeOrDelete ? \"inherit\" : \"red\" }}\n              />\n            </IconButton>\n\n            {post?.likes?.length}\n            <IconButton aria-label=\"share\" onClick={handleOpen}>\n              <CommentIcon />\n              {/*  <ShareIcon /> */}\n            </IconButton>\n\n            {post.totalMessages}\n\n            <IconButton\n              onClick={async () => {\n                console.log(post.id, \"userId\");\n                setLoading(true);\n                if (post.user_id !== null || undefined) {\n                  await deleteDoc(\n                    doc(firestore, `posts/${post?.id}/comments`)\n                  ).then(async () => {\n                    await deleteDoc(doc(firestore, \"posts\", post?.id)).then(\n                      () => {\n                        setLoading(false);\n                      }\n                    );\n                  });\n                }\n              }}\n              aria-label=\"delete\"\n            >\n              {loading == true ? (\n                <CircularProgress />\n              ) : auth?.currentUser?.uid == post?.user_id ? (\n                <DeleteOutlineIcon />\n              ) : null}\n            </IconButton>\n            <CommentList\n              open={open}\n              setOpen={setOpen}\n              id={post?.id}\n              post={post}\n            />\n          </Feed.Meta>\n\n          {/*  <ListItemAvatar>\n                <Avatar sx={{ bgcolor: grey[500] }} src={post?.avatar} aria-label=\"recipe\">\n                    {post?.author_nickname?.charAt(0)}\n                </Avatar>\n            </ListItemAvatar> */}\n        </Feed.Content>\n      </Feed.Event>\n    </>\n  );\n};\n\nexport default Post;\n","import { List } from '@mui/material'\nimport React, { useState, useEffect } from 'react'\nimport Post from './Post'\nimport { Feed, Icon } from 'semantic-ui-react'\nimport { TPost } from '.././types/types'\ninterface iPosts {\n  text: string,\n  id: string\n}\n\nexport default function PostList({ index, currentId, posts }: { index?: number, currentId?: number, posts: Array<TPost> }) {\n  return <div style={{ marginTop: 20, display: 'flex', justifyContent: 'center', alignItems: 'center',}}>\n    <Feed>\n\n      {posts?.map((post: any) => (\n        <Post post={post} />\n      ))}\n    </Feed>\n\n\n  </div>\n}","import React, { useState, useEffect } from 'react'\nimport '../App.css';\n/* import firebase from '../firebase' */\nimport 'semantic-ui-css/semantic.min.css'\n/* import TodoForm from './components/form';\nimport TodoList from './components/TodoList'; */\nimport { Form, Button, Card, Image } from 'semantic-ui-react'\nimport { getAuth, createUserWithEmailAndPassword, signOut, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { auth, firestore } from '../firebase';\nimport { setDoc, doc, collection, addDoc, } from 'firebase/firestore'\nimport { Agent } from 'http';\nimport { useParams, useNavigate } from 'react-router-dom'\n\nexport const Signin = () => {\n  const [email, setEmail] = useState('')\n  const [pass, setPass] = useState('')\n  const [email2, setEmail2] = useState('')\n  const [pass2, setPass2] = useState('')\n  const [nickname, setNickname] = useState('')\n  const [age, setAge] = useState('')\n  const navigate = useNavigate()\n\nconsole.log(email, )\n\n\n\n  return (\n    <div className='ui container' style={{ background: '#fff' }}>\n    \n\n      <div style={{ marginTop: 30, paddingBottom: 200, display: 'flex', justifyContent: 'center', }}>\n        <Card>\n          <Card.Content>\n            <Card.Header>SignUp</Card.Header>\n\n            <Form style={{ width: 300, marginTop: 30, }}>\n              <Form.Group widths='equal' >\n                <Form.Input value={email} onChange={(e) => {\n                  setEmail(e.target.value)\n                }} fluid label='email' placeholder='email' />\n                <Form.Input value={nickname} onChange={(e) => {\n                  setNickname(e.target.value)\n                }} fluid label='nickname' placeholder='nickname' />\n\n              </Form.Group>\n\n              <Form.Group widths='equal'>\n                <Form.Input value={age} onChange={(e) => {\n                  setAge(e.target.value)\n                }} fluid label='age' placeholder='age' />\n                <Form.Input value={pass} onChange={(e) => {\n                  setPass(e.target.value)\n                }} fluid label='password' placeholder='password' />\n              </Form.Group>\n              <Card.Content extra>\n                <div className='ui two buttons'>\n                  <Button basic color='green' onClick={() => {\n\n\n                    createUserWithEmailAndPassword(auth, email, pass).then(async () => {\n                      if (auth.currentUser?.uid !== undefined) {\n                        const id: any = auth.currentUser?.uid\n                        console.log('firestore')\n                        await setDoc(doc(firestore, 'users', id), {\n                          email: email,\n                          nickname: nickname,\n                          age: age,\n                        }).then(()=>{\n                          navigate('/home/')\n                        }).catch((err) => {\n                          if (err.code == 'auth/email-already-exists') {\n                            console.log('email already exists')\n                          }\n                        })\n                      }\n\n                    })\n\n                  }}>submit</Button>\n\n                </div>\n              </Card.Content>\n            </Form>\n\n            <Card.Header style={{ marginTop: 30, }}>Login</Card.Header>\n\n            <Form style={{ width: 300, marginTop: 30, }}>\n              <Form.Group widths='equal' >\n                <Form.Input value={email2} onChange={(e) => {\n                  setEmail2(e.target.value)\n                }} fluid label='email' placeholder='email' />\n                <Form.Input value={pass2} onChange={(e) => {\n                  setPass2(e.target.value)\n                }} fluid label='password' placeholder='password' />\n              </Form.Group>\n              <Card.Content extra>\n                <div className='ui two buttons'>\n                  <Button basic color='green' onClick={() => {\n                    signInWithEmailAndPassword(auth, email2, pass2).then(()=>navigate('/home/')).catch((err) => {\n                      console.log(err, 'signed in error')\n                    })\n                  }}>\n                    submit\n                          </Button>\n                </div>\n              </Card.Content>\n            </Form>\n\n          </Card.Content>\n\n        </Card>\n\n      </div>\n\n    </div>\n  )\n}\n\n\n","import TextField from \"@mui/material/TextField\";\nimport React, { useState, useEffect } from \"react\";\nimport \"../App.css\";\nimport { Link } from \"react-router-dom\";\nimport { auth, firestore } from \"../firebase\";\nimport Box from \"@mui/material/Box\";\nimport Drawer from \"@mui/material/Drawer\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport List from \"@mui/material/List\";\nimport Divider from \"@mui/material/Divider\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport InboxIcon from \"@mui/icons-material/MoveToInbox\";\nimport MailIcon from \"@mui/icons-material/Mail\";\nimport { Home, SettingsInputComponent } from \"@material-ui/icons\";\nimport LoginIcon from \"@mui/icons-material/Login\";\nimport { ClearAll, Login, Search, Clear } from \"@mui/icons-material\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport LogoutIcon from \"@mui/icons-material/Logout\";\nimport PostList from \"./PostList\";\nimport { TPost } from \".././types/types\";\nimport {\n  collection,\n  doc,\n  getDoc,\n  limit,\n  onSnapshot,\n  orderBy,\n  query,\n  where,\n} from \"@firebase/firestore\";\nimport { IconButton } from \"@mui/material\";\n\nexport const DrawerPanel = ({ visible, setVisible, open, setOpen }: any) => {\n  const signOutHandler = (index: number) => {\n    if (index == 2) auth.signOut();\n    console.log(index, \"index\");\n  };\n\n  return (\n    <Drawer\n      variant=\"permanent\"\n      open={open}\n      onClose={() => setOpen(false)}\n      sx={{\n        width: 240,\n        flexShrink: 0,\n        [`& .MuiDrawer-paper`]: { width: 240, boxSizing: \"border-box\" },\n      }}\n    >\n      <Toolbar />\n      <Box sx={{ overflow: \"auto\" }}>\n        <List>\n          {[\"HOME\", \"LOGIN\", \"EXIT\"].map((text, index) => (\n            <Link to={index == 0 ? \"/todoapp/home/\" : index == 1 ? \"/todoapp/login\" : \"/todoapp/login\"}>\n              <ListItem button key={text} onClick={() => signOutHandler(index)}>\n                <ListItemIcon>\n                  {index == 0 ? (\n                    <Home />\n                  ) : index == 1 ? (\n                    <LoginIcon />\n                  ) : (\n                    <LogoutIcon />\n                  )}\n                </ListItemIcon>\n\n                <ListItemText primary={text} />\n              </ListItem>\n            </Link>\n          ))}\n        </List>\n        <Divider />\n        <List>\n          {[\"PROFILE\", \"SETTINGS\"].map((text, index) => (\n            <Link\n              to={\n                index == 0 ? \"/todoapp/profile/\" : index == 1 ? \"/todoapp/settings\" : \"/todoapp/login\"\n              }\n            >\n              <ListItem button key={text}>\n                <ListItemIcon>\n                  {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n                </ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            </Link>\n          ))}\n        </List>\n      </Box>\n    </Drawer>\n\n    /*    <Sidebar\n           style={{ background: '#0d6fa8' }}\n           as={Menu}\n           animation='push'\n           icon='labeled'\n           direction={'left'}\n\n           inverted\n           onHide={() => setVisible(false)}\n           vertical\n           visible={visible}\n           width='thin'\n       >\n           <Link to='/home/'>\n               <Menu.Item as='a'>\n                   <Icon name='home' />\n                   Home\n           </Menu.Item>\n           </Link>\n\n           <Menu.Item as='a' onClick={()=>{\n               auth.signOut()\n           }}>\n               <Icon name='sign in' />\n                   Exit\n           </Menu.Item>\n\n           <Menu.Item as='a'>\n               <Icon name='conversation' />\n                Channels\n           </Menu.Item>\n       </Sidebar> */\n  );\n};\n\nexport const DrawerPanelMessages = ({\n  index,\n  currentId,\n  posts,\n}: {\n  index?: number;\n  currentId?: number;\n  posts: Array<TPost>;\n}) => {\n  const [text, setText] = useState<string>(\"\");\n  const [posts2, setPosts2] = useState<Array<TPost>>([]);\n\n  useEffect(() => {\n    const q = query(\n      collection(firestore, \"posts\"),\n      where(\"text\", \"==\", text),\n      orderBy(\"created\", \"desc\"),\n      limit(10)\n    );\n\n    onSnapshot(q, (data) => {\n      const list: any = [];\n      data.forEach((doc) => {\n        console.log(doc.data().text, \"doc\");\n        list.push({ ...doc.data(), id: doc.id });\n      });\n      console.log(list, \"list\");\n      setPosts2(list);\n    });\n  }, [text]);\n\n  return (\n    <Drawer\n      variant=\"permanent\"\n      sx={{\n        width: 270,\n        flexShrink: 0,\n        [`& .MuiDrawer-paper`]: { width: 270, boxSizing: \"border-box\" },\n      }}\n      anchor=\"right\"\n    >\n      <Toolbar />\n      <Box sx={{ overflow: \"auto\" }}>\n        <List>\n          <ListItem>\n            <TextField\n              value={text}\n              onChange={(e) => {\n                setText(e.currentTarget.value);\n              }}\n              fullWidth={true}\n              id=\"input-with-icon-textfield\"\n              label=\"Search...\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <Search />\n                  </InputAdornment>\n                ),\n                endAdornment: (\n                  <>\n                    {text.length > 0 ? (\n                      <InputAdornment position=\"start\">\n                        <IconButton\n                        onClick={()=>{\n                          setText('')\n                        }}\n                        >\n                          <Clear />\n                        </IconButton>\n                      </InputAdornment>\n                    ) : null}\n                  </>\n                ),\n              }}\n              variant=\"standard\"\n            />\n          </ListItem>\n          {posts2.length > 0 ? (\n            <ListItem>\n              <PostList posts={posts2} />\n            </ListItem>\n          ) : (\n            <div\n              style={{\n                fontSize: 19,\n                color: \"#c6cccf\",\n                fontWeight: \"900\",\n                display: \"flex\",\n                justifyContent: \"center\",\n              }}\n            >\n              type something...\n            </div>\n          )}\n        </List>\n      </Box>\n    </Drawer>\n  );\n};\n","import { Formik, Form, Field } from 'formik'\nimport { useRef, useState } from 'react'\n\nimport { styled } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\nimport PhotoCamera from '@mui/icons-material/PhotoCamera';\nimport Stack from '@mui/material/Stack';\nimport PanoramaIcon from '@mui/icons-material/Panorama';\nimport { CircularProgress, TextField } from '@mui/material';\nimport { ImagesearchRoller } from '@mui/icons-material';\nimport { getDownloadURL, ref, uploadBytes } from '@firebase/storage';\nimport { auth, firestore, storage } from '../firebase';\nimport { collection, doc, setDoc } from '@firebase/firestore';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../redux/store'\n/* import { TUser } from '../redux/post' */\nimport { useAppDispatch, useAppSelector } from '../redux/hooks'\nimport moment from 'moment'\n\nconst Input = styled('input')({\n    display: 'none',\n});\n\n\nexport const FormPost = ({ setOpenCreatePost }: any) => {\n\n    const user = useAppSelector((data: RootState) => data.post.user)\n    const [image, setImage]: any = useState(null)\n    const formRef: any = useRef<HTMLHeadingElement>()\n    const userData = Object(user)\n    const [loading, setLoading] = useState(false)\n\n    const uploadImage = async () => {\n\n        if (image == null) {\n            return null\n        }\n\n        const storageRef = ref(storage, `files/${auth.currentUser?.uid}/${image.name}` );\n\n        const uploadTask = uploadBytes(storageRef, image, { contentType: 'image/png' })\n\n        try {\n            await uploadTask\n            const url = await getDownloadURL(storageRef)\n            return url\n\n        } catch (error) {\n\n            console.log(error);\n            return null;\n        }\n\n    }\n\n\n    const createPost = async () => {\n        setLoading(true)\n        let image_url: any = await uploadImage()\n        if (image_url == null && image) {\n            image_url = image\n        }\n        if (auth.currentUser?.uid !== undefined) {\n            const id = auth.currentUser?.uid\n            const postRef = doc(collection(firestore, 'posts'))\n            console.log('values form', { ...formRef?.current?.values, image_url: image_url, })\n            await setDoc(postRef, {\n                ...formRef?.current?.values, image_url: image_url,\n                image_name: image?.name == undefined ? null : image?.name,\n                user_id: auth.currentUser?.uid, author_nickname: userData?.nickname == undefined ? null : userData?.nickname,\n                avatar: userData?.avatar == undefined ? null : userData?.avatar,\n                created: new Date().toISOString(),\n\n            }).then(() => { console.log('created'); setLoading(false); setOpenCreatePost(false)})\n        }\n\n    }\n\n    return (\n        <div style={{ padding: 10, }}>\n\n\n            <div style={{ display: 'flex', overflow: 'auto', justifyContent: 'center' }}>\n                {\n                    image !== null ? <div style={{ width: 300, height: 300, display: 'flex', justifyContent: 'space-evenly' }}>\n                        <img style={{ width: 200, height: 400, }} alt='imagePost' src={image !== null && image !== undefined ? URL.createObjectURL(image !== undefined || null ? image : '') : ''} />\n                    </div>\n\n                        : <PanoramaIcon sx={{ width: 200, height: 200, color: '#e0e0e0' }} />\n                }\n            </div>\n\n\n            <Formik\n                initialValues={{\n                    text: '',\n                }}\n                onSubmit={(values) => {\n                    createPost()\n                    console.log(values, 'values')\n                }}\n                innerRef={formRef}\n            >\n\n\n                <Form >\n\n                    <Field maxRows={4} multiline={true} variant=\"standard\" fullWidth label='text' as={TextField} name='text' placeholder='text' />\n                    <br /><br />\n                    <label style={{ width: '100%' }} htmlFor=\"contained-button-file\">\n                        <Input id=\"contained-button-file\" name='file' onChange={(e: any) => {\n                            /*  setImage(e.target.files) */\n                            const files: any = e.target.files[0]\n\n                            setImage(files)\n\n                        }} accept=\"image/*\" multiple type='file' />\n                        <Button fullWidth variant=\"contained\" color='inherit' component=\"span\">\n                            Upload image\n                        </Button>\n                    </label>\n                    <br />\n                    <br />\n                    {\n                        loading == true ? <CircularProgress /> :\n                            <Button variant='contained' color='success' type='submit' fullWidth>post</Button>\n                    }\n\n\n                </Form>\n            </Formik>\n        </div>\n    )\n}","import { Avatar, CircularProgress, FormControl, IconButton, Modal, Paper, Popover, TextField, Button } from '@mui/material'\nimport React, { useEffect, useState, FC, Dispatch, SetStateAction } from 'react'\nimport { Card, } from 'semantic-ui-react'\nimport { auth, firestore } from '../firebase';\nimport { FormPost } from './FormPost';\nimport { collection, doc, getDoc, limit, onSnapshot, orderBy, query, updateDoc, where } from '@firebase/firestore';\n\nimport { getDownloadURL, ref, uploadBytes } from '@firebase/storage';\nimport { useAppSelector } from '../redux/hooks';\nimport { RootState } from '../redux/store';\nimport { storage } from '../firebase'\n\nimport { styled } from '@mui/material/styles';\nimport { convertTypeAcquisitionFromJson } from 'typescript';\nimport { style } from '../styles/editStyles';\nimport { Clear, SettingsInputComponent } from '@material-ui/icons';\nconst Input = styled('input')({\n    display: 'none',\n});\n\n\ninterface IProfileEdit {\n    edit: boolean,\n    image?: any,\n    setImage?: any,\n    setEdit?: any\n}\n\nexport const ProfileEdit: FC<IProfileEdit> = ({ edit, image, setImage, setEdit }) => {\n\n    const user = useAppSelector((data: RootState) => data.post.user)\n    /*   const [image, setImage]: any = useState(null) */\n\n    const userData = Object(user)\n\n    const [email, setEmail] = useState(auth.currentUser?.email)\n    const [nickname, setNickname] = useState(userData?.nickname)\n    const [loading, setLoading] = useState(false)\n    const uploadImage = async () => {\n\n        if (image == null) {\n            return null\n        }\n\n        const storageRef = ref(storage, `files/${auth.currentUser?.uid}/avatar` );\n\n        const uploadTask = uploadBytes(storageRef, image, { contentType: 'image/png' })\n\n        try {\n            await uploadTask\n            const url = await getDownloadURL(storageRef)\n            return url\n\n        } catch (error) {\n\n            console.log(error);\n            return null;\n        }\n\n    }\n\n\n    return (\n    \n        <>\n            <Modal\n                open={edit}\n                onClose={() => setEdit(false)}\n            >\n\n                <Paper\n                    sx={{\n                        position: 'absolute',\n                        top: '50%',\n                        left: '50%',\n                        transform: 'translate(-50%, -50%)',\n                        width: 'auto',\n                        bgcolor: 'background.paper',\n                        boxShadow: 24,\n                        p: 4,\n                    }} >\n                    <FormControl sx={{ m: -1 }}>\n                        <IconButton \n                        onClick={()=>setEdit(false)}\n                        style={{marginLeft: '70%'}}>\n                           <Clear/> \n                        </IconButton>\n                       \n\n                        <label style={{ width: '100%' }} htmlFor=\"contained-button-file\">\n                            <Input id=\"contained-button-file\" name='file' onChange={(e: any) => {\n\n                                const files: any = e.target.files[0]\n\n                                setImage(files)\n\n                            }} accept=\"image/*\" multiple type='file' />\n                            <Button fullWidth style={{ width: '100%' }} variant=\"contained\" component=\"span\">\n                                Upload image\n                        </Button>\n                        </label>\n                        <br />\n                        <TextField color='success' fullWidth name='email' label='email' variant='standard' value={email} onChange={(e) => { setEmail(e.currentTarget.value) }} />\n                        <br />\n                        <TextField color='success' fullWidth name='email' label='nickname' variant='standard' value={nickname} onChange={(e) => { setNickname(e.currentTarget.value) }} />\n                        <br />\n                        {\n                            loading == true ? <CircularProgress /> :\n                                <Button style={{ width: '100%' }} onClick={async () => {\n                                    if (auth.currentUser?.uid !== undefined) {\n                                        setLoading(true)\n                                        let image_url: any = await uploadImage()\n                                        if (image_url == null && image) {\n                                            image_url = image\n                                        }\n                                        const userRef = doc(firestore, 'users', auth.currentUser?.uid)\n                                        await updateDoc(userRef, {\n                                            email: email,\n                                            nickname: nickname,\n                                            avatar: /* user.avatar !== null ? user.avatar :  */image_url,\n                                        }).then(() => {\n                                            setLoading(false)\n                                        })\n                                    }\n                                }} fullWidth>submit</Button>\n                        }\n\n                    </FormControl>\n\n                </Paper>\n            </Modal>\n            \n          \n                <h2 style={{ wordWrap: 'break-word', width: 200, color: '#585859' }}>{auth.currentUser?.email || 'user'}</h2>\n                <h3 style={{ wordWrap: 'break-word', width: 200, color: '#585859' }}>{userData?.nickname}</h3>\n          \n            </>\n    )\n}","import { Avatar, CircularProgress, FormControl, IconButton, Modal, Paper, Popover, TextField } from '@mui/material'\nimport React, { FC, useEffect, useState } from 'react'\nimport { Button, Card } from 'semantic-ui-react'\nimport PostList from './PostList'\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport PhoneIcon from '@mui/icons-material/Phone';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport PersonPinIcon from '@mui/icons-material/PersonPin';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport SettingsOutlinedIcon from '@mui/icons-material/SettingsOutlined';\nimport TextsmsOutlinedIcon from '@mui/icons-material/TextsmsOutlined';\nimport { auth, firestore } from '../firebase';\nimport { FormPost } from './FormPost';\nimport { collection, doc, getDoc, limit, onSnapshot, orderBy, query, updateDoc, where } from '@firebase/firestore';\nimport { Clear } from '@material-ui/icons';\nimport { ProfileEdit } from './ProfileEdit';\nimport { useSelector } from 'react-redux';\nimport { useAppSelector } from '../redux/hooks';\nimport styles from '../styles/profile.module.css'\n\ninterface TabPanelProps {\n    children?: React.ReactNode;\n    index: number;\n    value: number;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box sx={{ p: 2, }}>\n                    <div>{children}</div>\n                </Box>\n            )}\n        </div>\n    );\n}\ninterface iPosts {\n    text: string,\n    id: string\n}\n\ninterface IProfile {\n    posts: Array<iPosts>\n}\nexport const Profile: FC<IProfile> = ({ posts }) => {\n    const [value, setValue] = useState(0);\n    const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null);\n    const [edit, setEdit] = useState(false)\n    const handleChange = (event: React.SyntheticEvent, newValue: number) => {\n        setValue(newValue);\n    };\n    const [openCreatePost, setOpenCreatePost] = useState(false)\n    const open = Boolean(anchorEl);\n    const [userPosts, setUserPosts] = useState([])\n    const user = useAppSelector(data => data.post.user)\n\n\n    const [image, setImage]: any = useState(null)\n    useEffect(() => {\n        if (auth?.currentUser?.uid !== undefined) {\n            const q = query(collection(firestore, 'posts'), where('user_id', '==', auth.currentUser?.uid), orderBy('created', 'desc'), limit(10))\n\n            onSnapshot(q, (data) => {\n\n                const list: any = []\n                data.forEach((doc) => {\n\n                    console.log(doc.data().text, 'doc')\n                    list.push({ ...doc.data(), id: doc.id })\n                })\n                setUserPosts(list)\n            })\n        }\n    }, [])\n\n\n    return (\n\n        <div className={styles.profile}>\n            <div className={styles.first}>\n                {\n                    image !== null ?\n                        <Avatar style={{ width: 200, height: 200, }} alt='imagePost' src={image !== null && image !== undefined ? URL.createObjectURL(image !== undefined || null ? image : '') : ''} />\n                        : <Avatar\n                            alt='userAvatar'\n                            src={user?.avatar}\n                            sx={{ width: 200, height: 200, }}\n                        >\n                            {user.nickname?.charAt(0)}\n                    </Avatar>\n                }\n\n\n                <ProfileEdit setEdit={setEdit} edit={edit} image={image} setImage={setImage} />\n                <Button onClick={() => {\n                    setEdit(true)\n                }} style={{ width: '100%', maxWidth: 200, marginTop: 10 }}>{edit == true ? 'cancel' : 'Edit profile'}</Button>\n            </div>\n\n\n            <div className={styles.second}>\n\n                <Tabs\n                    indicatorColor='primary'\n                    variant='fullWidth'\n                    textColor=\"inherit\"\n                    value={value} onChange={handleChange} aria-label=\"icon label tabs example\">\n                    <Tab style={{ color: '#585859' }} icon={<TextsmsOutlinedIcon />} label=\"POSTS\" />\n                    <Tab style={{ color: '#585859' }} icon={<SettingsOutlinedIcon />} label=\"SETTINGS\" />\n                    <Tab style={{ color: '#585859' }} icon={<PersonPinIcon />} label=\"NEARBY\" />\n\n                </Tabs>\n\n                <TabPanel value={value} index={0}>\n                    <Button\n                        fluid={true}\n                        onClick={(e) => {\n                            setOpenCreatePost(true)\n                        }}\n                    >create new post</Button>\n                    <Modal\n                        open={openCreatePost}\n                        onClose={() => setOpenCreatePost(false)}\n                    >\n\n                        <Paper\n                            sx={{\n                                position: 'absolute',\n                                top: '50%',\n                                left: '50%',\n                                transform: 'translate(-50%, -50%)',\n                                width: 'auto',\n                                bgcolor: 'background.paper',\n                                boxShadow: 24,\n                                p: 4,\n                            }}>\n                            <FormPost setOpenCreatePost={setOpenCreatePost} />\n                        </Paper>\n                        \n                    </Modal>\n\n                    <PostList posts={userPosts} />\n                </TabPanel>\n                <TabPanel value={value} index={1}>\n                    Item Two\n                    </TabPanel>\n                <TabPanel value={value} index={2}>\n                    Item Three\n                    </TabPanel>\n            </div>\n\n        </div>\n    )\n}","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\"\nimport {TUser} from '../types/types'\n\n\nexport interface PostState {\n    colors: any,\n    index: number,\n    user: TUser;\n\n}\nconst initialState: PostState = {\n    colors: [\n        'black', 'pink', 'red', 'orange', 'yellow', 'olive', 'green', 'teal', 'blue', 'violet', 'purple', 'brown'\n    ],\n    index: 0,\n    user: {}\n}\n\n const post = createSlice({\n    name: 'post', \n    initialState,\n    reducers: {\n        postData: (state, action: PayloadAction<TUser>) =>{\n            state.user = action.payload\n        },\n    }\n})\n\n/* export function post(state = initialState, action: any) {\n    switch (action.type) {\n        case 'CHANGE_COLOR':\n            return {\n                ...state,\n                colors: action.changeColor\n            }\n        default: {\n            return state;\n        }\n    }\n} */\n\n\nexport const { postData } = post.actions\n\nexport default post.reducer\n\n\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport './App.css';\nimport { auth, db, firestore } from './firebase'\nimport { getDatabase, ref, onValue } from \"firebase/database\";\nimport 'semantic-ui-css/semantic.min.css'\nimport TodoForm from './components/form';\nimport PostList from './components/PostList';\nimport { BrowserRouter as Router, Routes, Route, Link, useNavigate } from 'react-router-dom';\nimport { styled, alpha } from '@mui/material/styles';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport InputBase from '@mui/material/InputBase';\nimport Badge from '@mui/material/Badge';\nimport MenuItem from '@mui/material/MenuItem';\nimport Menu from '@mui/material/Menu';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport SearchIcon from '@mui/icons-material/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@mui/icons-material/Mail';\nimport NotificationsIcon from '@mui/icons-material/Notifications';\nimport MoreIcon from '@mui/icons-material/MoreVert';\nimport { Signin } from './components/Signin';\nimport { DrawerPanel, DrawerPanelMessages } from './components/Drawer'\nimport { Profile } from './components/profile';\nimport { collection, doc, getDoc, limit, onSnapshot, orderBy, query } from '@firebase/firestore';\nimport { setupMaster } from 'cluster';\nimport { useDispatch } from 'react-redux';\nimport { postData } from './redux/post';\nimport { useAppDispatch } from './redux/hooks'\nimport { Sidebar } from 'semantic-ui-react';\nimport { Container } from '@mui/material';\nimport { Home } from '@mui/icons-material';\n\nconst Search = styled('div')(({ theme }) => ({\n  position: 'relative',\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\n  '&:hover': {\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\n  },\n  marginRight: theme.spacing(2),\n  marginLeft: 0,\n  width: '100%',\n  [theme.breakpoints.up('sm')]: {\n    marginLeft: theme.spacing(3),\n    width: 'auto',\n  },\n}));\n\nconst SearchIconWrapper = styled('div')(({ theme }) => ({\n  padding: theme.spacing(0, 2),\n  height: '100%',\n  position: 'absolute',\n  pointerEvents: 'none',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n}));\n\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\n  color: 'inherit',\n  '& .MuiInputBase-input': {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n}));\n\n\n\nfunction App() {\n  const [currentId, setCurrentId] = useState<number>(3)\n  const [index, setIndex] = useState<number>(0)\n\n  const [todoList, setTodoList] = useState([])\n  const [posts, setPosts] = useState([])\n  const [visible, setVisible] = useState<boolean>(false)\n  const [user, setUser] = useState([])\n  const navigate = useNavigate()\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n\n    const q = query(collection(firestore, 'posts'), orderBy('created', 'desc'), limit(10))\n\n    onSnapshot(q, (data) => {\n\n      const list: any = []\n      data.forEach((doc) => {\n        console.log(doc.data().text, 'doc')\n        list.push({ ...doc.data(), id: doc.id })\n      })\n      console.log(list, 'list')\n      setPosts(list)\n    })\n    const fetchUser = async () => {\n      if (auth.currentUser?.uid !== undefined) {\n\n        const id = auth.currentUser?.uid\n        const userDoc = doc(firestore, 'users', id)\n\n        const userSnap: any = await getDoc(userDoc)\n        console.log(userSnap.data(), 'usersnap')\n        if (userSnap.exists()) {\n          dispatch(postData(userSnap.data()))\n        }\n      }\n    }\n\n    fetchUser()\n\n\n  }, [auth.currentUser?.uid])\n  console.log(auth.currentUser?.uid, 'id')\n\n  useEffect(() => {\n\n    if (auth.currentUser !== null) {\n      navigate('/todoapp/home')\n    } else {\n      navigate('/todoapp/login')\n    }\n\n  }, [auth.currentUser])\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = useState(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleProfileMenuOpen = (event: any) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event: any) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = 'primary-search-account-menu';\n\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{\n        vertical: 'top',\n        horizontal: 'right',\n      }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{\n        vertical: 'top',\n        horizontal: 'right',\n      }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      \n      <MenuItem>\n        <IconButton size=\"large\" aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"error\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>messages</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton\n          size=\"large\"\n          aria-label=\"show 17 new notifications\"\n          color=\"inherit\"\n        >\n          <Badge badgeContent={17} color=\"error\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>notification</p>\n      </MenuItem>\n      <Link to='/profile'>\n        <MenuItem >\n          <IconButton\n            size=\"large\"\n            aria-label=\"account of current user\"\n            aria-controls=\"primary-search-account-menu\"\n            aria-haspopup=\"true\"\n            color=\"inherit\"\n          >\n            <AccountCircle />\n          </IconButton>\n          <p>profile</p>\n        </MenuItem>\n      </Link>\n    </Menu>\n  );\n\n  return (\n  \n    <div style={{ background: '#fff' }}>\n     \n\n        <Box sx={{ flexGrow: 1 }}>\n          <AppBar sx={{ zIndex: (theme) => theme.zIndex.drawer + 1 }} style={{}} position=\"fixed\">\n            <Toolbar>\n              <IconButton\n                size=\"large\"\n                edge=\"start\"\n                color=\"inherit\"\n\n                onClick={(): any => {\n                  setVisible(true)\n                }}\n                sx={{ mr: 10 }}\n              >\n                <MenuIcon />\n              </IconButton>\n              <Typography\n                variant=\"h6\"\n                noWrap\n                component=\"div\"\n                sx={{ display: { xs: 'none', sm: 'block' } }}\n              >\n                {/* firebase.auth().currentUser?.email ? firebase.auth().currentUser?.email :  */'User'}\n              </Typography>\n              <Search>\n                <SearchIconWrapper>\n                  <SearchIcon />\n                </SearchIconWrapper>\n                <StyledInputBase\n                  placeholder=\"Search…\"\n                  inputProps={{ 'aria-label': 'search' }}\n                />\n              </Search>\n              <Box sx={{ flexGrow: 1 }} />\n              <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\n                <IconButton size=\"large\" aria-label=\"show 4 new mails\" color=\"inherit\">\n                  <Badge badgeContent={4} color=\"error\">\n                    <MailIcon />\n                  </Badge>\n                </IconButton>\n                <IconButton\n                  size=\"large\"\n                  aria-label=\"show 17 new notifications\"\n                  color=\"secondary\"\n                >\n                  <Badge badgeContent={17} color=\"error\">\n                    <NotificationsIcon />\n                  </Badge>\n                </IconButton>\n                <Link to='/profile'>\n                  <IconButton\n                    size=\"large\"\n                    edge=\"end\"\n                    aria-label=\"account of current user\"\n                    aria-controls={menuId}\n                    aria-haspopup=\"true\"\n                    onClick={handleProfileMenuOpen}\n                    color=\"inherit\"\n                  >\n                    <AccountCircle style={{ color: '#fff' }} />\n                  </IconButton>\n                </Link>\n\n              </Box>\n              <Box sx={{ display: { xs: 'flex', md: 'none' } }}>\n                <IconButton\n                  size=\"large\"\n                  aria-label=\"show more\"\n                  aria-controls={mobileMenuId}\n                  aria-haspopup=\"true\"\n                  onClick={handleMobileMenuOpen}\n                  color=\"inherit\"\n                >\n                  <MoreIcon />\n                </IconButton>\n              </Box>\n            </Toolbar>\n          </AppBar>\n          {renderMobileMenu}\n\n        </Box>\n\n        <DrawerPanel visible={visible} setVisible={setVisible} />\n        <DrawerPanelMessages posts={posts} currentId={currentId} index={index} />\n\n        <Toolbar/>\n       <Box component='main' sx={{flexGrow: 1, p: 3,}}>\n          <Routes>\n            <Route\n              path='/todoapp/home/'\n              element={\n                <div style={{ paddingBottom: 30, textAlign: 'center', height: '100vh', marginTop: 10, overflow: 'auto', display: 'table', tableLayout: 'fixed', width: '100%' }}>\n                    <PostList posts={posts} currentId={currentId} index={index} />\n\n                </div>\n              }\n            />\n\n            <Route\n              element={<Signin />}\n              path='/todoapp/login'\n            />\n            <Route\n              element={<Profile posts={posts} />}\n              path='/todoapp/profile'\n            />\n          </Routes>\n     \n\n          </Box>\n      \n\n    \n    </div>\n      \n  )\n}\n\nexport default App;\n","import { combineReducers, createStore } from \"redux\";\n\nimport { configureStore } from '@reduxjs/toolkit'\nimport post from './post'\nimport { compileFunction } from \"vm\";\n\nexport const store = configureStore({\n    reducer: {\n        post: post,\n    },\n})\n\nexport type RootState = ReturnType<typeof store.getState>\n\nexport type AppDispatch = typeof store.dispatch\n/* let rootReducer = combineReducers({\n    post: post\n})\n\nexport const store = createStore(rootReducer) */","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from \"react-redux\";\nimport { store } from './redux/store'\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router, } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n            <App />\n      </Router>\n  \n    </Provider>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}