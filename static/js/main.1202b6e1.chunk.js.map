{"version":3,"sources":["firebase.js","components/form.js","components/todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","Form","useState","title","setTitle","type","onChange","e","target","value","onClick","todoRef","database","ref","todo","push","Todo","child","id","remove","TodoList","todoList","setTodoList","useEffect","on","snapshot","todos","val","map","index","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAWEA,IAASC,cATY,CACnBC,OAAQ,0CACRC,WAAY,6BACZC,UAAW,aACXC,cAAe,yBACfC,kBAAmB,eACnBC,MAAO,8CAKMP,QAAf,E,OCVa,SAASQ,IACpB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAYA,OACI,gCACI,uBAAOC,KAAK,OAAOC,SAbN,SAACC,GAClBH,EAASG,EAAEC,OAAOC,QAY6BA,MAAON,IAClD,wBAAQO,QAXD,WACX,IAAMC,EAAUlB,EAASmB,WAAWC,IAAI,QAClCC,EAAO,CACTX,SAEJQ,EAAQI,KAAKD,IAMT,uB,YChBG,SAASE,EAAT,GAAuB,IAARF,EAAO,EAAPA,KAK1B,OAAO,gCACH,6BAAKA,EAAKX,QACV,wBAAQO,QANO,WACCjB,EAASmB,WAAWC,IAAI,QAAQI,MAAMH,EAAKI,IACnDC,UAIR,uBCNO,SAASC,IACpB,MAAgClB,qBAAhC,mBAAOmB,EAAP,KAAiBC,EAAjB,KAcA,OAZAC,qBAAU,WACM9B,EAASmB,WAAWC,IAAI,QAChCW,GAAG,SAAQ,SAACC,GAClB,IAAMC,EAAQD,EAASE,MACjBN,EAAW,GACjB,IAAK,IAAIH,KAAMQ,EACbL,EAASN,KAAT,aAAeG,MAAOQ,EAAMR,KAE9BI,EAAYD,QAEZ,IAEK,8BACFA,EAAWA,EAASO,KAAI,SAACd,EAAMe,GAAP,OACtB,cAACb,EAAD,CAAMF,KAAMA,GAAWe,MACrB,KCLEC,MAZf,WACE,OACE,sBAAKC,UAAU,MAAf,UACC,0CACA,cAAC9B,EAAD,IACA,cAACmB,EAAD,IACA,8BAAK,uCAAS,6CAAT,aCCKY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1202b6e1.chunk.js","sourcesContent":["import firebase from 'firebase'\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAHGFiDFkpHNI-8ysTIKGohN0yCmxQPRk4\",\r\n    authDomain: \"todo-7ac24.firebaseapp.com\",\r\n    projectId: \"todo-7ac24\",\r\n    storageBucket: \"todo-7ac24.appspot.com\",\r\n    messagingSenderId: \"998281377900\",\r\n    appId: \"1:998281377900:web:07ed4643d2435a50180049\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  export default firebase","import React, { useState } from 'react'\r\nimport firebase from '../firebase'\r\n\r\nexport default function Form() {\r\n    const [title, setTitle] = useState('');\r\n    const handleChange = (e) => {\r\n        setTitle(e.target.value)\r\n    };\r\n    const create = () => {\r\n        const todoRef = firebase.database().ref('Todo');\r\n        const todo = {\r\n            title,\r\n        };\r\n        todoRef.push(todo)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <input type='text' onChange={handleChange} value={title}/>\r\n            <button onClick={create}>add me</button>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport firebase from '../firebase'\r\n\r\nexport default function Todo({todo}) {\r\n    const deleteTodo = () => {\r\n        const todoRef = firebase.database().ref('Todo').child(todo.id);\r\n        todoRef.remove();\r\n    }\r\n    return <div>\r\n        <h3>{todo.title}</h3>\r\n        <button onClick={deleteTodo}>delete</button>\r\n    </div>\r\n}","import React, {useState, useEffect} from 'react'\r\nimport firebase from '../firebase'\r\nimport Todo from './todo'\r\n\r\nexport default function TodoList() {\r\n    const [todoList, setTodoList] = useState()\r\n\r\n    useEffect(()=>{\r\n    const todoRef = firebase.database().ref('Todo');\r\n    todoRef.on('value',(snapshot)=>{\r\n      const todos = snapshot.val();\r\n      const todoList = [];\r\n      for (let id in todos){\r\n        todoList.push({id, ...todos[id]})\r\n      }\r\n      setTodoList(todoList)\r\n    });\r\n    },[])\r\n\r\n    return <div>\r\n        {todoList ? todoList.map((todo, index)=> (\r\n           <Todo todo={todo} key={index}/>\r\n        )) : ''}\r\n    </div>\r\n}","import React from 'react'\nimport './App.css';\nimport Form from './components/form';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <h1>todo app</h1>\n     <Form/>\n     <TodoList/>\n     <div><footer> <h5>made by aya</h5> </footer></div>\n    </div>\n\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}