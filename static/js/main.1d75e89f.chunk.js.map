{"version":3,"sources":["firebase.js","components/form.js","components/todo.js","components/TodoList.js","App.js","redux/todo.js","redux/store.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","TodoForm","setIndex","index","setCurrentId","currentId","todoList","useState","title","postData","setPostData","updateData","find","r","id","useEffect","clear","style","display","justifyContent","Segment","width","Form","Field","fluid","required","control","Input","label","placeholder","type","onChange","e","target","value","Button","onClick","console","log","todoRef","database","ref","todo","push","then","update","create","content","Todo","textAlign","marginTop","Message","color","className","Fab","child","remove","marginLeft","variant","size","aria-label","TodoList","map","App","email","setEmail","pass","setPass","setTodoList","on","snapshot","todos","val","background","to","exact","path","paddingBottom","fontSize","Card","Content","Header","Group","widths","extra","basic","auth","createUserWithEmailAndPassword","User","res","catch","err","code","signInWithEmailAndPassword","initialState","colors","rootReducer","combineReducers","state","action","changeColor","store","createStore","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1d75e89f.chunk.js","sourcesContent":["import firebase from 'firebase'\r\nimport 'firebase/auth'\r\nimport 'firebase/firebase-database'\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAHGFiDFkpHNI-8ysTIKGohN0yCmxQPRk4\",\r\n    authDomain: \"todo-7ac24.firebaseapp.com\",\r\n    projectId: \"todo-7ac24\",\r\n    storageBucket: \"todo-7ac24.appspot.com\",\r\n    messagingSenderId: \"998281377900\",\r\n    appId: \"1:998281377900:web:07ed4643d2435a50180049\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  export default firebase","import React, { useState, useEffect } from 'react'\r\nimport firebase from '../firebase'\r\nimport { Form, Input, TextArea, Button, Select, Segment } from 'semantic-ui-react'\r\n\r\nexport default function TodoForm({ setIndex, index, setCurrentId, currentId, todoList }) {\r\n    const [title, setTitle] = useState('');\r\n    const [postData, setPostData] = useState({\r\n        title: ''\r\n    })\r\n\r\n    const updateData = todoList?.find((r) => { if (r.id == currentId) { return r.title } })\r\n\r\n    useEffect(() => {\r\n        if (updateData) setPostData({ title: updateData.title })\r\n    }, [updateData])\r\n\r\n    const handleChange = (e) => {\r\n        setPostData({ ...postData, title: e.target.value })\r\n    }\r\n\r\n    const clear = () => {\r\n        setCurrentId(0)\r\n        setPostData({\r\n            title: ''\r\n        })\r\n    }\r\n    const create = () => {\r\n        if (currentId === 0 ) {\r\n            const todoRef = firebase.database().ref('Todo');\r\n\r\n           \r\n                const todo = {\r\n                    title: postData.title\r\n                }\r\n                todoRef.push(todo).then(() => {\r\n                    setPostData({ title: '' })\r\n                })\r\n                setIndex(index + 1)\r\n                clear()\r\n            \r\n\r\n        } else {\r\n            firebase.database().ref(`Todo/${currentId}`).update({\r\n                title: postData.title\r\n            })\r\n            clear()\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div style={{display: 'flex', justifyContent: 'center',}}>\r\n            <Segment style={{width: 500,}} >\r\n                    <Form>\r\n                <Form.Field\r\n                \r\n                fluid\r\n                    required\r\n                    control={Input}\r\n                    label='Post'\r\n                    placeholder='add post'\r\n                    type='text'\r\n                    onChange={handleChange} value={postData.title}\r\n                />\r\n                <Form.Field\r\n                    id='form-button-control-public'\r\n                    control={Button}\r\n                    onClick={() => {\r\n                        if (postData.title == '') {\r\n                            console.log('empty')\r\n                        } else {\r\n                            create()\r\n                        }\r\n                       \r\n                    }}\r\n                    content='add post'\r\n\r\n                />\r\n            </Form> \r\n            </Segment>\r\n       \r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport firebase from '../firebase'\r\nimport { Message, Form, Input, TextArea, Button, Select } from 'semantic-ui-react'\r\nimport { Fab } from '@material-ui/core';\r\n\r\nexport default function Todo({ todo, index, setCurrentId }) {\r\n\r\n    const colors = ['red', 'orange', 'yellow', 'olive', 'green', 'teal', 'blue', 'violet', 'purple']\r\n\r\n    const deleteTodo = () => {\r\n        const todoRef = firebase.database().ref('Todo').child(todo.id);\r\n        todoRef.remove();\r\n\r\n    }\r\n\r\n\r\n    return <div style={{ textAlign: 'center', marginTop: 30, textAlign: 'center', display: 'flex', justifyContent: 'center', /* width: '100%', maxWidth: 1200 */}}>\r\n        <Message  color={colors[index]}>\r\n            <div style={{width: 300,}}>\r\n                <p > {todo.title}</p>\r\n            </div>\r\n           \r\n            \r\n            <div className='ui two buttons'>\r\n                <Fab onClick={deleteTodo} style={{ marginLeft: 30, }} variant=\"extended\" size=\"small\" color=\"#fff\" aria-label=\"add\">\r\n                    delete\r\n            </Fab>\r\n                <Fab onClick={() => {\r\n                    setCurrentId(todo.id)\r\n                    console.log(todo.id)\r\n                }} style={{ marginLeft: 30, }} variant=\"extended\" size=\"small\" color=\"#fff\" aria-label=\"add\">\r\n                    update\r\n            </Fab>\r\n            </div>\r\n\r\n        </Message>\r\n    </div>\r\n}","import React, { useState, useEffect } from 'react'\r\nimport firebase from '../firebase'\r\nimport Todo from './todo'\r\n\r\nexport default function TodoList({ index, setCurrentId, todoList }) {\r\n/*   const [todoList, setTodoList] = useState()\r\n\r\n  useEffect(() => {\r\n    const todoRef = firebase.database().ref('Todo');\r\n    todoRef.on('value', (snapshot) => {\r\n      const todos = snapshot.val();\r\n      console.log(todos)\r\n\r\n      const todoList = [];\r\n      for (let id in todos) {\r\n        todoList.push({ id, ...todos[id] })\r\n      }\r\n      setTodoList(todoList)\r\n    });\r\n\r\n  }, []) */\r\n\r\n  return <div>\r\n    {todoList ? todoList.map((todo, id) => (\r\n      <Todo setCurrentId={setCurrentId} index={index} todo={todo} key={id} />\r\n    )) : ''}\r\n  </div>\r\n}","import React, { useState, useEffect } from 'react'\r\nimport './App.css';\r\nimport firebase from './firebase'\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport TodoForm from './components/form';\r\nimport TodoList from './components/TodoList';\r\nimport { Form, Button, Card, Image } from 'semantic-ui-react'\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nfunction App() {\r\n  const [currentId, setCurrentId] = useState(0)\r\n  const [index, setIndex] = useState(0)\r\n  const [email, setEmail] = useState('')\r\n  const [pass, setPass] = useState('')\r\n  const [todoList, setTodoList] = useState()\r\n\r\n  useEffect(() => {\r\n    const todoRef = firebase.database().ref('Todo');\r\n    todoRef.on('value', (snapshot) => {\r\n      const todos = snapshot.val();\r\n      console.log(todos)\r\n\r\n      const todoList = [];\r\n      for (let id in todos) {\r\n        todoList.push({ id, ...todos[id] })\r\n      }\r\n      setTodoList(todoList)\r\n    });\r\n\r\n  }, [])\r\n\r\n  return (\r\n    <Router>\r\n      <div style={{ background: 'black' }}>\r\n        <div className='ui container' style={{ background: 'black' }}>\r\n          <div className=\"ui inverted menu\">\r\n            <Link to='/todoapp/' className=\"item\" >\r\n              Home\r\n            </Link>\r\n            <a className=\"item\">\r\n              Posts from me\r\n          </a>\r\n            <Link to='/todoapp/login' className=\"item\" >\r\n              SignIn\r\n          </Link>\r\n          </div>\r\n\r\n          <Switch>\r\n            <Route exact path='/todoapp/'>\r\n              <div style={{ paddingBottom: 30, textAlign: 'center',}}>\r\n                <h1 style={{ textAlign: 'center', color: '#fff', marginTop: 55, }}>todo app</h1>\r\n                <TodoForm todoList={todoList} setCurrentId={setCurrentId} currentId={currentId} setIndex={setIndex} index={index} />\r\n                <TodoList todoList={todoList} setCurrentId={setCurrentId} index={index} />\r\n              </div>\r\n            </Route>\r\n\r\n            <Route path='/todoapp/login'>\r\n              <div style={{ background: 'black' }}>\r\n                <p style={{ color: '#fff', fontSize: 16, textAlign: 'center', marginTop: 70, }}>login</p>\r\n                <div style={{ marginTop: 30, paddingBottom: 200, display: 'flex', justifyContent: 'center', }}>\r\n                  <Card>\r\n                    <Card.Content>\r\n                      <Card.Header>SignUp</Card.Header>\r\n\r\n                      <Form style={{ width: 300, marginTop: 30, }}>\r\n                        <Form.Group widths='equal' >\r\n                          <Form.Input value={email} onChange={(e) => {\r\n                            setEmail(e.target.value)\r\n                          }} fluid label='email' placeholder='email' />\r\n                          <Form.Input value={pass} onChange={(e) => {\r\n                            setPass(e.target.value)\r\n                          }} fluid label='password' placeholder='password' />\r\n                        </Form.Group>\r\n                        <Card.Content extra>\r\n                          <div className='ui two buttons'>\r\n                            <Button basic color='green' onClick={() => {\r\n                              firebase.auth().createUserWithEmailAndPassword(email, pass).then(() => {\r\n                                let User = {\r\n                                  email: email\r\n                                }\r\n                                firebase.database().ref('Users').push(User).then((res) => {\r\n                                  console.log(res)\r\n                                })\r\n                              }).catch((err) => {\r\n                                if (err.code == 'auth/email-already-exists') {\r\n                                  console.log('auth, email exists')\r\n                                  firebase.auth().signInWithEmailAndPassword(email, pass)\r\n                                }\r\n                              })\r\n\r\n                            }}>\r\n                              submit\r\n                          </Button>\r\n                          </div>\r\n                        </Card.Content>\r\n                      </Form>\r\n\r\n                      <Card.Header style={{ marginTop: 30, }}>Login</Card.Header>\r\n\r\n                      <Form style={{ width: 300, marginTop: 30, }}>\r\n                        <Form.Group widths='equal' >\r\n                          <Form.Input value={email} onChange={(e) => {\r\n                            setEmail(e.target.value)\r\n                          }} fluid label='email' placeholder='email' />\r\n                          <Form.Input value={pass} onChange={(e) => {\r\n                            setPass(e.target.value)\r\n                          }} fluid label='password' placeholder='password' />\r\n                        </Form.Group>\r\n                        <Card.Content extra>\r\n                          <div className='ui two buttons'>\r\n                            <Button basic color='green' onClick={() => {\r\n                              firebase.auth().signInWithEmailAndPassword(email, pass).then(() => {\r\n                                console.log('signed in')\r\n                              }).catch((err) => {\r\n                                console.log(err, 'signed in error')\r\n                              })\r\n                            }}>\r\n                              submit\r\n                          </Button>\r\n                          </div>\r\n                        </Card.Content>\r\n                      </Form>\r\n\r\n                    </Card.Content>\r\n\r\n                  </Card>\r\n\r\n                </div>\r\n\r\n              </div>\r\n            </Route>\r\n\r\n          </Switch>\r\n\r\n\r\n\r\n\r\n        </div>\r\n      </div>\r\n    </Router >\r\n\r\n\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default App;\r\n","const initialState = {\r\n    colors: [\r\n        'black', 'pink', 'red', 'orange', 'yellow', 'olive', 'green', 'teal', 'blue', 'violet', 'purple', 'brown'\r\n    ],\r\n    index: 0,\r\n}\r\n\r\nexport function todo(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'CHANGE_COLOR':\r\n            return {\r\n                ...state,\r\n                colors: action.changeColor\r\n\r\n            }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const ChangeColor = (value) => ({\r\n    type: 'CHANGE_COLOR',\r\n    changeColor: value\r\n})","import {combineReducers, createStore} from \"redux\";\r\nimport {todo} from './todo'\r\n\r\nlet rootReducer = combineReducers({\r\n    todo: todo\r\n})\r\n\r\nexport const store = createStore(rootReducer)","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from './redux/store'\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}